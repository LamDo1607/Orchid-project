"""
Django settings.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import json
from mongoengine import connect


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
IS_LINUX = BASE_DIR[0] == '/'
IS_WINDOWS = BASE_DIR[1] == ':'
IS_RASPBERRY_PI = False
SLASH = '/'
if IS_WINDOWS:
    SLASH = '\\'

PROJECT_DIR = os.path.join(BASE_DIR, "..", "..")
DEBUG = True

BUILD_MODE = "debug"
if os.path.exists(os.path.join(PROJECT_DIR, "release")):
    DEBUG = False
    BUILD_MODE = "release"

SETTINGS = None
SETTING_PATH = os.path.join(BASE_DIR, "orchid", "settings.json")
with open(SETTING_PATH, encoding='utf-8') as f:
    SETTINGS = json.load(f)

VERSION = SETTINGS["version"]


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SETTINGS["secrect_key"]

# SECURITY WARNING: don't run with debug turned on in production!

DB_SETTING = SETTINGS["mongodb"][BUILD_MODE]

ALLOWED_HOSTS = ['*']
ADMIN_ENABLED = False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'mongoengine',
    'rest_framework',
    'corsheaders',
    'api',
    'web',
    'django_crontab'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'orchid.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CRONJOBS = [
    ('5 17 * * *', 'orchid.cron.ScheduleJob')
]
WSGI_APPLICATION = 'orchid.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.dummy',
    },
    'test': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'db.sqlite3'
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "..", "..", "static")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "web", "static"),
]

if DEBUG:
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
else:
    MEDIA_ROOT = os.path.join(BASE_DIR,"..", "..", 'media')

if(MEDIA_ROOT[-1] != SLASH):
    MEDIA_ROOT += SLASH

EXCEL_TEMPLATE = os.path.join(BASE_DIR, 'excel')
MEDIA_URL = '/media/'
DATA_UPLOAD_MAX_MEMORY_SIZE = None

HOST = "http://localhost"
if(not DEBUG):
    HOST = "http://localhost"

MONGODB_HOST        =  DB_SETTING["host"]
MONGODB_USER        =  DB_SETTING["user"]
MONGODB_PASSWD      =  DB_SETTING["password"]
MONGODB_NAME        =  DB_SETTING["db_name"]

MONGODB_CONNECT_STR = 'mongodb://{}:{}@{}/{}'.format( MONGODB_USER     \
                                                     ,MONGODB_PASSWD \
                                                     ,MONGODB_HOST    \
                                                     ,MONGODB_NAME)

# if DEBUG:
#     MONGODB_CONNECT_STR = "mongodb+srv://facemon:DSbfy69wOk5IcrH2@cluster0-szl7z.mongodb.net/facemon?retryWrites=true&w=majority"
connect(MONGODB_NAME, host=MONGODB_CONNECT_STR)

CORS_ORIGIN_ALLOW_ALL = True

NUM_FACE = 0

STREAM_WEBCAM = False

PLAY_WEBCAM = True
WEBCAM_CONNECTED = False

WAITING_TIME = 0
APPEAR_TIME = ""


CURRENT_LOG = ""

EMAIL_SETTINGS = SETTINGS["email"]
EMAIL_HOST = EMAIL_SETTINGS["host"]
EMAIL_PORT = EMAIL_SETTINGS["port"]
EMAIL_HOST_USER = EMAIL_SETTINGS["user"]
EMAIL_HOST_PASSWORD = EMAIL_SETTINGS["password"]
EMAIL_SENDER = EMAIL_SETTINGS["from_email"]
#EMAIL_USE_SSL=True
EMAIL_USE_TLS=True